@startuml
'https://plantuml.com/sequence-diagram


+interface Pet {
    {abstract} +Integer getID()
    {abstract} +String getName()
    {abstract} +String getType()
    {abstract} +String getBreed()
    {abstract} +String getSize()
    {abstract} +String getGender()
    {abstract} +Integer getAge()
    {abstract} +String getColour()
    {abstract} +String getCoat()
    {abstract} +String getStatus()
    {abstract} +String getOrg()
    {abstract} +boolean getGWChildren()
    {abstract} +boolean getGWDog()
    {abstract} +boolean getGWCat()
    {abstract} +boolean getTrained()
    {abstract} +boolean getDeclawed()
    {abstract} +String getNeeds()
    {abstract} +String getLocation()
}

+class ViewManagerModel {
    -String activeViewName
    -PropertyChangeSupport support
    +String getActiveView()
    + void setActiveView()
    +void firePropertyChanged()
    +void addPropertyChangeListener()
}

+class SearchController {
    -SearchInputBoundary searchUseCaseInteractor
    +SearchController()
    +void execute()
}

+class SearchPresenter implements SearchOutputBoundary {
    -SearchViewModel searchViewModel
    -ViewManagerModel viewManagerModel
    +SearchPresenter()
    +void prepareSuccessView()
    +void prepareFailView()
}

+class SearchState {
    -List<String> requirements
    -String requirementError
    +SearchState()
    +List<String> getRequirements()
    +String getRequirementError()
    +void setRequirements()
    +void setRequirementError()
}

+class SearchViewModel extends ViewModel {
    +String TITLE_LABEL
    +String REQUIREMENT_LABEL
    +String SEARCH_BUTTON_LABEL
    -SearchState searchState
    +SearchViewModel()
    +void setState()
    -PropertyChangeSupport
    +void firePropertyChanged()
    +void addPropertyChangeListener()
    +SearchState getState()
}

+abstract class ViewModel {
    -String activeViewName
    +ViewModel()
    +String getViewName()
    {abstract} +void firePropertyChanged()
    {abstract} +void addPropertyChangeListener()
}

+interface SearchInputBoundary {
    {abstract} +void execute()
}

+class SearchInputData {
    -Map<String, List<String>> requirements
    +SearchInputData()
    +List<String> getRequirements()
}

+class SearchUseCaseInteractor implements SearchInputBoundary {
    -SearchDataAccessInterface searchDataAccessObject
    -SearchOutputBoundary searchPresenter
    +SearchUseCaseInteractor()
    +void execute()
}

+interface SearchOutputBoundary {
    {abstract} +void prepareSuccessView()
    {abstract} +void prepareFailView()
}

+class SearchOutputData {
    -List<String> requirements
    -boolean searchFail
    +SearchOutputData()
    +List<String> getRequirements()
}

+interface SearchDataAccessInterface {
    {abstract} +void accessApi()
    {abstract} +List<Pet> retrieve()
    {abstract} +save()
}

+class ApiDataAccessObject implements SearchDataAccessInterface {
    -str apiToken
    -void accessApi()
    +List<Pet> retrieve()
    +save()
}

'requirement input needs to change format, not just text box
+class SearchView extends JPanel implements ActionListener, PropertyChangeSupport {
    -String viewName
    -SearchViewModel searchViewModel
    -JTextField requirementInputField
    -SearchController searchController
    -JButton search
    +SearchView()
    +void actionPerformed()
    +void propertyChange()
}

+class ViewManager implements PropertyChangeListener {
    -CardLayout cardLayout
    -Jpanel views
    -ViewManagerModel viewManagerModel
    +ViewManager()
    +void propertyChange()
}

Pet *-- SearchDataAccessInterface
Pet *-- SearchUseCaseInteractor
SearchDataAccessInterface *-- SearchUseCaseInteractor
SearchOutputBoundary *-- SearchUseCaseInteractor
SearchOutputData *-- SearchUseCaseInteractor
SearchInputData *-- SearchUseCaseInteractor
SearchInputData *-- SearchController
SearchInputBoundary *-- SearchController
SearchOutputData *-- SearchPresenter
SearchViewModel *-- SearchPresenter
SearchViewModel *-- SearchView
SearchController *-- SearchView
ViewManagerModel *-- ViewManager
SearchState *-- SearchViewModel


@enduml